const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';
let authToken = '';
let userId = '';

async function testBackend() {
    console.log('üß™ INICIANDO PRUEBA COMPLETA DEL BACKEND\n');
    
    try {
        // 1. Test de conexi√≥n b√°sica
        console.log('1. üîó Probando conexi√≥n b√°sica...');
        const baseResponse = await axios.get(`${API_BASE}`);
        console.log('‚úÖ Conexi√≥n b√°sica:', baseResponse.data.mensaje);

        // 2. Test de registro de usuario
        console.log('2. üë§ Probando registro de usuario...');
        const testEmail = `test${Date.now()}@example.com`;
        
        const registerResponse = await axios.post(`${API_BASE}/auth/register`, {
            nombre: 'Usuario Test',
            email: testEmail,
            password: '123456'
        });
        console.log('‚úÖ Registro exitoso');

        // 3. Test de login
        console.log('3. üîë Probando login...');
        const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
            email: testEmail,
            password: '123456'
        });
        
        authToken = loginResponse.data.token;
        userId = loginResponse.data.user.id;
        console.log('‚úÖ Login exitoso - Token obtenido');

        // 4. Test de verificaci√≥n de token
        console.log('4. ‚úÖ Probando verificaci√≥n de token...');
        const verifyResponse = await axios.get(`${API_BASE}/auth/verify`, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        console.log('‚úÖ Token verificado correctamente');

        // 5. Test de perfil de usuario
        console.log('5. üìä Probando perfil de usuario...');
        const profileResponse = await axios.get(`${API_BASE}/usuario/profile`, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        console.log('‚úÖ Perfil obtenido:', profileResponse.data.data.nombre);

        // 6. Test de creaci√≥n de receta
        console.log('6. üç≥ Probando creaci√≥n de receta...');
        const recetaData = {
            nombre: 'Receta de Prueba',
            categoria: 'Postres',
            descripcion: 'Esta es una receta de prueba',
            preparacion: 'Paso 1: Hacer esto. Paso 2: Hacer aquello.',
            ingredientes: [
                { nombre: 'Harina', cantidad: 2, unidad_medida: 'tazas' },
                { nombre: 'Az√∫car', cantidad: 1, unidad_medida: 'taza' }
            ]
        };

        const recetaResponse = await axios.post(`${API_BASE}/recetas`, recetaData, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        const recetaId = recetaResponse.data.receta.id_receta;
        console.log('‚úÖ Receta creada - ID:', recetaId);

        // 7. Test de listar recetas
        console.log('7. üìù Probando listado de recetas...');
        const recetasResponse = await axios.get(`${API_BASE}/recetas`, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        console.log(`‚úÖ ${recetasResponse.data.recetas.length} recetas obtenidas`);

        // 8. Test de favoritos
        console.log('8. ‚ù§Ô∏è Probando sistema de favoritos...');
        
        // Agregar a favoritos
        await axios.post(`${API_BASE}/favoritos/${recetaId}`, {}, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        console.log('‚úÖ Receta agregada a favoritos');

        // Verificar favorito
        const checkFavResponse = await axios.get(`${API_BASE}/favoritos/${recetaId}/check`, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        console.log('‚úÖ Verificaci√≥n de favorito:', checkFavResponse.data.esFavorito);

        // Listar favoritos
        const favResponse = await axios.get(`${API_BASE}/favoritos`, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        console.log(`‚úÖ ${favResponse.data.data.length} favoritos obtenidos`);

        // 9. Test de b√∫squeda
        console.log('9. üîç Probando b√∫squeda...');
        const searchResponse = await axios.get(`${API_BASE}/recetas/search?q=prueba`, {
            headers: { Authorization: `Bearer ${authToken}` }
        });
        console.log(`‚úÖ B√∫squeda completada - ${searchResponse.data.recetas.length} resultados`);

        console.log('\nüéâ ¬°TODAS LAS PRUEBAS EXITOSAS!');
        console.log('‚úÖ Backend 100% funcional');
        console.log('‚úÖ Base de datos conectada');
        console.log('‚úÖ Autenticaci√≥n JWT funcionando');
        console.log('‚úÖ CRUD completo operativo');
        console.log('‚úÖ Sistema de favoritos operativo');

    } catch (error) {
        console.error('‚ùå Error en las pruebas:', error.response?.data || error.message);
        console.log('üîß Revisa los logs del servidor para m√°s detalles');
    }
}

// Ejecutar pruebas
testBackend();